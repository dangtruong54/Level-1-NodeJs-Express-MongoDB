<% 
    paginationHelper = (paramsPagination, type, requestStatus, requestQuery) => { 

        let totalItem   = paramsPagination.totalItem;
        let totalPage   = Math.ceil(totalItem / paramsPagination.itemPerPage);
        let itemPerPage = paramsPagination.itemPerPage;
        let currentPage = paramsPagination.currentPage;
        let pageRanges = paramsPagination.pageRanges;
        let to          = itemPerPage * currentPage;
        let from        = to - itemPerPage + 1;

        if(to > totalItem) to = totalItem;

        let xhtmlPagination = '', xhtmlStart = '', xhtmlPrevious = '', xhtmlNext = '', xhtmlPages = '', xhtmlEnd = '';

        let link                = sysConfig.systemAdmin + '/' + type + '/' + requestStatus;
        if(requestQuery !== '') link += '?keyword=' + requestQuery + '&page=';
        else link += '?page=';

        if(currentPage > 1) {
            xhtmlStart = `<li><a href="${link}1">Start</a></li>`;
            xhtmlPrevious = `<li><a href="${link}${currentPage-1}">Previous</a></li>`;
        }

        if(currentPage < totalPage) {
            xhtmlEnd  = `<li><a href="${link}${totalPage}">End</a></li>`;
            xhtmlNext = `<li><a href="${link}${currentPage+1}">Next</a></li>`;
        }

        let min = 1, max = totalPage;
        let middle = Math.ceil(pageRanges/2);
        min = currentPage - middle + 1;
        max = min + pageRanges - 1;
     
        if(min <= 1) {
            min = 1;        
            max = pageRanges;
        }

        if(max >= totalPage) {
            max = totalPage;
            min = ((max - pageRanges + 1) >= 1 ) ? (max - pageRanges + 1) : 1;
        }
        console.log(min);
        console.log(pageRanges);
        for(let i = min; i <= max; i++) {
       
            if(i == currentPage) {
                xhtmlPages += `<li class="active"><a>${i}</a></li>`;
            }else {
                xhtmlPages += `<li><a href="${link}${i}">${i}</a></li>`;
            }
        }

        xhtmlPagination = '<ul class="pagination text-center">' + xhtmlStart + xhtmlPrevious + xhtmlNext + xhtmlPages + xhtmlEnd + '</ul>';

        return `
            <div class="panel panel-info" id="pagination">
                <div class="panel-heading">
                    Pagination
                    <span class="label label-warning">Total pages: ${totalPage}</span>
                    <span class="label label-danger">Total entries: ${totalItem}</span>
                </div>
                <div class="panel-body">
                    <div class="infor-pagination">
                        <p>Number of elements on the page:
                            <span>${itemPerPage}</span>
                        </p>
                        <p>Showing
                            <span> ${from} </span> to
                            <span> ${to} </span> of
                            <span>${totalItem}</span> entries</p>
                    </div>
                    <div class="ad-pagination">
                        ${xhtmlPagination}
                    </div>
                </div>
            </div>
        `; 
    }
%>